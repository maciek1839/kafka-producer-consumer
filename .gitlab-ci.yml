default:
  image: amazoncorretto:21.0.6@sha256:c85c7135dc4129c10319b6aacb01e1f896ae0e3fccaa3823daae74643cac6126
  before_script:
    - chmod +x mvnw
    - export MAVEN_OPTS="-Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/"
    # required by Maven Wrapper
    # ./mvnw: line 253: tar: command not found
    - yum install -y tar gzip

# Static Application Security Testing (SAST) is a frequently used Application Security (AppSec) tool,
# which scans an applicationâ€™s source, binary, or byte code.
# https://www.microfocus.com/en-us/what-is/sast
include:
  - template: Security/SAST.gitlab-ci.yml

semgrep-sast:
  before_script:
    - echo 'No need for extra steps'

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  SAST_JAVA_VERSION: "17" # Required by SAST scanning

cache:
  key: maven-cache
  paths:
    - $CI_PROJECT_DIR/.m2/

stages:
  - test
  - build
  - deploy

integration-tests:
  stage: test
  script:
    - ./mvnw verify $MAVEN_OPTS
    - cat coverage-report/target/site/jacoco-aggregate/index.html | grep -o '<tfoot>.*</tfoot>'
  coverage: '/Total.*?([0-9]{1,3})%/'
  artifacts:
    paths:
      - coverage-report/target/site/jacoco-aggregate
    expire_in: 1 hour

confluent-integration-tests:
  image: docker:20.10.24@sha256:2967f0819c84dd589ed0a023b9d25dcfe7a3c123d5bf784ffbb77edf55335f0c
  stage: test
  before_script:
    - echo 'No need to do extra steps'
  services:
    - docker:dind
  variables:
    # Instruct Testcontainers to use the daemon of DinD, use port 2375 for non-tls connections.
    DOCKER_HOST: "tcp://docker:2375"
    # Instruct Docker not to start over TLS.
    DOCKER_TLS_CERTDIR: ""
    # Improve performance with overlayfs.
    DOCKER_DRIVER: overlay2
  script:
    - apk add --no-cache bash docker-compose
    - docker-compose -f docker-compose.yml up -d
    - chmod +x gitlab_ci_check_docker_compose.sh
    - ./gitlab_ci_check_docker_compose.sh
#    - todo run producer and consumer from Java
    - docker-compose down
  timeout: 30m
  only:
    - master
    - merge_requests

sonarcloud-check:
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - ./mvnw verify sonar:sonar -Dsonar.projectKey=ShowMeYourCodeYouTube_kafka-producer-consumer
  only:
    - merge_requests
    - master

build:
  stage: build
  script:
    # -U, --update-snapshots
    # Forces a check for updated releases and snapshots on remote repositories
    # Ref: https://books.sonatype.com/mvnref-book/reference/running-sect-options.html
    - ./mvnw clean install -U -DskipTests $MAVEN_OPTS
  artifacts:
    paths:
      - kotlin/kotlin-common/target/*.jar
      - kotlin/kotlin-kafka-consumer/target/*.jar
      - kotlin/kotlin-kafka-producer/target/*.jar
      - kotlin/kotlin-starter/target/*.jar
      - java/java-common/target/*.jar
      - java/java-kafka-consumer/target/*.jar
      - java/java-kafka-producer/target/*.jar
      - java/java-starter/target/*.jar
    expire_in: 1 hour

pages:
  stage: deploy
  script:
    - echo 'Cleaning old pages'
    - rm -rf public
    - ls -la
    - mkdir -p public/test-report && cp -r coverage-report/target/site/jacoco-aggregate/* public/test-report
    - echo 'Public directory content after copying files'
    - ls -la ./public
  artifacts:
    paths:
      - public
    expire_in: 1 hour
  only:
    - master
